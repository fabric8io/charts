---
apiVersion: "v1"
kind: "Template"
labels: {}
metadata:
  annotations:
    description: "Provides centralised [Management features](http://fabric8.io/guide/management.htm)\
      \ like [Logging](http://fabric8.io/guide/logging.html) and [Metrics](http://fabric8.io/guide/metrics.html)\n"
    fabric8.elasticsearch/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/elasticsearch/src/main/fabric8/icon.png"
    fabric8.elasticsearch/summary: "[elasticsearch](http://elasticsearch.com/) provides\
      \ distributed RESTful search and analytics"
    fabric8.kibana/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/kibana/src/main/fabric8/icon.svg"
    fabric8.kibana/summary: "Awesome front-end for Elasticsearch"
    fabric8.logging/summary: "Sonatype helps open source projects to set up Maven\
      \ repositories on https://oss.sonatype.org/"
    fabric8.logging/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/packages/logging/src/main/fabric8/icon.svg"
    fabric8.grafana2/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/grafana2/src/main/fabric8/icon.png"
    fabric8.grafana2/summary: "[Grafana](http://grafana.org/) 2 console for viewing\
      \ metrics stored in various storage backends"
    fabric8.prometheus/summary: "[Prometheus](http://prometheus.io/) - an open-source\
      \ service monitoring system and time series database"
    fabric8.prometheus/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus/src/main/fabric8/icon.png"
    fabric8.metrics/summary: "Sonatype helps open source projects to set up Maven\
      \ repositories on https://oss.sonatype.org/"
    fabric8.metrics/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/packages/metrics/src/main/fabric8/icon.png"
    fabric8.management/summary: "Sonatype helps open source projects to set up Maven\
      \ repositories on https://oss.sonatype.org/"
    fabric8.management/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/packages/management/src/main/fabric8/icon.svg"
  labels: {}
  name: "management"
objects:
- apiVersion: "v1"
  kind: "Service"
  metadata:
    annotations: {}
    labels:
      project: "elasticsearch"
      provider: "fabric8"
      version: "2.2.130"
      group: "io.fabric8.devops.apps"
      package: "logging"
    name: "elasticsearch"
  spec:
    deprecatedPublicIPs: []
    externalIPs: []
    ports:
    - port: 9200
      protocol: "TCP"
      targetPort: 9200
    selector:
      project: "elasticsearch"
      provider: "fabric8"
      group: "io.fabric8.devops.apps"
    type: "LoadBalancer"
- apiVersion: "v1"
  kind: "Service"
  metadata:
    annotations: {}
    labels:
      project: "elasticsearch"
      provider: "fabric8"
      version: "2.2.130"
      group: "io.fabric8.devops.apps"
      package: "logging"
    name: "elasticsearch-masters"
  spec:
    clusterIP: "None"
    deprecatedPublicIPs: []
    externalIPs: []
    ports:
    - port: 9300
      protocol: "TCP"
      targetPort: 9300
    selector:
      project: "elasticsearch"
      provider: "fabric8"
      group: "io.fabric8.devops.apps"
    type: "LoadBalancer"
- apiVersion: "v1"
  kind: "Service"
  metadata:
    annotations: {}
    labels:
      project: "grafana2"
      provider: "fabric8"
      version: "2.2.130"
      group: "io.fabric8.devops.apps"
      package: "metrics"
    name: "grafana2"
  spec:
    deprecatedPublicIPs: []
    externalIPs: []
    ports:
    - port: 80
      protocol: "TCP"
      targetPort: 3000
    selector:
      project: "grafana2"
      provider: "fabric8"
      group: "io.fabric8.devops.apps"
    type: "LoadBalancer"
- apiVersion: "v1"
  kind: "Service"
  metadata:
    annotations: {}
    labels:
      project: "kibana"
      provider: "fabric8"
      version: "2.2.130"
      group: "io.fabric8.devops.apps"
      package: "logging"
    name: "kibana"
  spec:
    deprecatedPublicIPs: []
    externalIPs: []
    ports:
    - port: 80
      protocol: "TCP"
      targetPort: 5601
    selector:
      project: "kibana"
      provider: "fabric8"
      group: "io.fabric8.devops.apps"
    type: "LoadBalancer"
- apiVersion: "v1"
  kind: "Service"
  metadata:
    annotations:
      prometheus.io/port: "9090"
      prometheus.io/scrape: "true"
    labels:
      project: "prometheus"
      provider: "fabric8"
      version: "2.2.130"
      group: "io.fabric8.devops.apps"
      package: "metrics"
    name: "prometheus"
  spec:
    deprecatedPublicIPs: []
    externalIPs: []
    ports:
    - port: 80
      protocol: "TCP"
      targetPort: 9090
    selector:
      project: "prometheus"
      provider: "fabric8"
      group: "io.fabric8.devops.apps"
    type: "LoadBalancer"
- apiVersion: "v1"
  kind: "ReplicationController"
  metadata:
    annotations:
      fabric8.io/git-commit: "514ff2f5601c91ddd8e44b1079bf87731f90df2f"
      fabric8.io/git-branch: "release-v2.2.130"
      fabric8.io/git-url: "http://gogs.release.cd.fabric8.io/gogsadmin/oss-parent/commit/514ff2f5601c91ddd8e44b1079bf87731f90df2f"
      fabric8.io/build-id: "2"
      fabric8.io/build-url: "http://jenkins.release.cd.fabric8.io/job/oss-parent/2"
    labels:
      project: "elasticsearch"
      provider: "fabric8"
      version: "2.2.130"
      group: "io.fabric8.devops.apps"
      package: "logging"
    name: "elasticsearch"
  spec:
    replicas: 1
    selector:
      project: "elasticsearch"
      provider: "fabric8"
      version: "2.2.130"
      group: "io.fabric8.devops.apps"
    template:
      metadata:
        annotations: {}
        labels:
          project: "elasticsearch"
          provider: "fabric8"
          version: "2.2.130"
          group: "io.fabric8.devops.apps"
          package: "logging"
      spec:
        containers:
        - args: []
          command: []
          env:
          - name: "SERVICE"
            value: "elasticsearch-masters"
          - name: "KUBERNETES_NAMESPACE"
            valueFrom:
              fieldRef:
                fieldPath: "metadata.namespace"
          image: "fabric8/elasticsearch-k8s:2.2.0"
          livenessProbe:
            initialDelaySeconds: 60
            tcpSocket:
              port: 9300
          name: "elasticsearch"
          ports:
          - containerPort: 9200
            name: "http"
          - containerPort: 9300
            name: "transport"
          readinessProbe:
            httpGet:
              path: "/_template/logstash"
              port: 9200
            initialDelaySeconds: 5
          securityContext: {}
          volumeMounts:
          - mountPath: "/usr/share/elasticsearch/data"
            name: "elasticsearch-data"
            readOnly: false
        - args: []
          command: []
          env: []
          image: "fabric8/elasticsearch-logstash-template:2.2.130"
          name: "logstash-template"
          ports: []
          volumeMounts: []
        imagePullSecrets: []
        nodeSelector: {}
        volumes:
        - emptyDir:
            medium: ""
          name: "elasticsearch-data"
- apiVersion: "v1"
  kind: "ReplicationController"
  metadata:
    annotations:
      fabric8.io/git-branch: "release-v2.2.130"
      fabric8.io/git-commit: "514ff2f5601c91ddd8e44b1079bf87731f90df2f"
      fabric8.io/git-url: "http://gogs.release.cd.fabric8.io/gogsadmin/oss-parent/commit/514ff2f5601c91ddd8e44b1079bf87731f90df2f"
      fabric8.io/build-url: "http://jenkins.release.cd.fabric8.io/job/oss-parent/2"
      fabric8.io/build-id: "2"
    labels:
      project: "grafana2"
      provider: "fabric8"
      version: "2.2.130"
      group: "io.fabric8.devops.apps"
      package: "metrics"
    name: "grafana2"
  spec:
    replicas: 1
    selector:
      project: "grafana2"
      provider: "fabric8"
      version: "2.2.130"
      group: "io.fabric8.devops.apps"
    template:
      metadata:
        annotations: {}
        labels:
          project: "grafana2"
          provider: "fabric8"
          version: "2.2.130"
          group: "io.fabric8.devops.apps"
          package: "metrics"
      spec:
        containers:
        - args: []
          command: []
          env:
          - name: "PROMETHEUS_ADDRESS"
            value: "http://prometheus"
          - name: "KUBERNETES_NAMESPACE"
            valueFrom:
              fieldRef:
                fieldPath: "metadata.namespace"
          image: "fabric8/grafana:2.5.0_01"
          name: "grafana2"
          ports:
          - containerPort: 3000
            name: "http"
          securityContext: {}
          volumeMounts:
          - mountPath: "/var/lib/grafana"
            name: "grafana-data"
            readOnly: false
        imagePullSecrets: []
        nodeSelector: {}
        volumes:
        - emptyDir:
            medium: ""
          name: "grafana-data"
- apiVersion: "v1"
  kind: "ReplicationController"
  metadata:
    annotations:
      fabric8.io/git-commit: "514ff2f5601c91ddd8e44b1079bf87731f90df2f"
      fabric8.io/git-branch: "release-v2.2.130"
      fabric8.io/git-url: "http://gogs.release.cd.fabric8.io/gogsadmin/oss-parent/commit/514ff2f5601c91ddd8e44b1079bf87731f90df2f"
      fabric8.io/build-id: "2"
      fabric8.io/build-url: "http://jenkins.release.cd.fabric8.io/job/oss-parent/2"
    labels:
      project: "kibana"
      provider: "fabric8"
      version: "2.2.130"
      group: "io.fabric8.devops.apps"
      package: "logging"
    name: "kibana"
  spec:
    replicas: 1
    selector:
      project: "kibana"
      provider: "fabric8"
      version: "2.2.130"
      group: "io.fabric8.devops.apps"
    template:
      metadata:
        annotations: {}
        labels:
          project: "kibana"
          provider: "fabric8"
          version: "2.2.130"
          group: "io.fabric8.devops.apps"
          package: "logging"
      spec:
        containers:
        - args: []
          command: []
          env:
          - name: "ELASTICSEARCH_URL"
            value: "http://elasticsearch:9200"
          - name: "KUBERNETES_NAMESPACE"
            valueFrom:
              fieldRef:
                fieldPath: "metadata.namespace"
          image: "fabric8/kibana4:v4.4.2"
          livenessProbe:
            initialDelaySeconds: 60
            tcpSocket:
              port: 5601
          name: "kibana"
          ports:
          - containerPort: 5601
            name: "http"
          readinessProbe:
            httpGet:
              path: "/"
              port: 5601
            initialDelaySeconds: 5
          securityContext: {}
          volumeMounts: []
        - args: []
          command: []
          env:
          - name: "ELASTICSEARCH_URL"
            value: "http://elasticsearch:9200"
          - name: "KUBERNETES_NAMESPACE"
            valueFrom:
              fieldRef:
                fieldPath: "metadata.namespace"
          image: "fabric8/kibana-config:2.2.130"
          name: "kibana-config"
          ports: []
          volumeMounts: []
        imagePullSecrets: []
        nodeSelector: {}
        volumes: []
- apiVersion: "v1"
  kind: "ReplicationController"
  metadata:
    annotations:
      fabric8.io/git-branch: "release-v2.2.130"
      fabric8.io/git-commit: "514ff2f5601c91ddd8e44b1079bf87731f90df2f"
      fabric8.io/git-url: "http://gogs.release.cd.fabric8.io/gogsadmin/oss-parent/commit/514ff2f5601c91ddd8e44b1079bf87731f90df2f"
      fabric8.io/build-url: "http://jenkins.release.cd.fabric8.io/job/oss-parent/2"
      fabric8.io/build-id: "2"
    labels:
      project: "prometheus"
      provider: "fabric8"
      version: "2.2.130"
      group: "io.fabric8.devops.apps"
      package: "metrics"
    name: "prometheus"
  spec:
    replicas: 1
    selector:
      project: "prometheus"
      provider: "fabric8"
      version: "2.2.130"
      group: "io.fabric8.devops.apps"
    template:
      metadata:
        annotations: {}
        labels:
          project: "prometheus"
          provider: "fabric8"
          version: "2.2.130"
          group: "io.fabric8.devops.apps"
          package: "metrics"
      spec:
        containers:
        - args: []
          command: []
          env:
          - name: "KUBERNETES_NAMESPACE"
            valueFrom:
              fieldRef:
                fieldPath: "metadata.namespace"
          image: "fabric8/prometheus-kubernetes:2.2.130"
          livenessProbe:
            tcpSocket:
              port: 9090
          name: "prometheus"
          ports:
          - containerPort: 9090
            name: "http"
          securityContext: {}
          volumeMounts:
          - mountPath: "/prometheus"
            name: "prometheus-data"
            readOnly: false
        imagePullSecrets: []
        nodeSelector: {}
        serviceAccountName: "metrics"
        volumes:
        - emptyDir:
            medium: ""
          name: "prometheus-data"
parameters: []
